«REM»
 Copyright (c) 2009 Ordina and committers to Mod4j
 All rights reserved. This program and the accompanying materials
 are made available under the terms of the Eclipse Public License v1.0
 which accompanies this distribution, and is available at
 http://www.eclipse.org/legal/epl-v10.html
  Contributors:
     Ordina - initial implementation
«ENDREM»
«IMPORT BusinessDomainDsl»
«IMPORT org::mod4j::dslcommon::xpand::java»

«EXTENSION BusinessRule»
«EXTENSION BusinessClass»
«EXTENSION org::mod4j::dslcommon::xtend::ProjectProperties»
«EXTENSION org::mod4j::dslcommon::xtend::generatorutil»
«EXTENSION org::mod4j::common::xtend::NameMapper»
«EXTENSION org::mod4j::common::xtend::FileTracker»

«DEFINE BeanClassImplBase FOR AbstractType»
    «EXPAND JavaComments::regenerationWarningHeader ("Mod4j BusinessDomainDsl generator: NewJavaBean.xpt") FOR this»

    package «getDomainRootPackage()»;

    «REM»
        Add import statements for Attributes. If a dataType occurs more then once,
        the import statement will be added just once.
    «ENDREM»
    «FOREACH properties.dataType.toSet() AS dataType»
        «EXPAND Imports::addImports FOR properties.selectFirst(e|e.dataType == dataType)»
    «ENDFOREACH»
    /**
     * «description»
     *
     * @author Generated by Mod4j BusinessDomain DSL
     */
    public class «javaDomainBaseClass(name)»
    «EXPAND Attributes::addAttribute FOREACH properties.reject(e|e.derived)»
    «EXPAND Attributes::addGetter FOREACH properties»
    «EXPAND Attributes::addSetter FOREACH properties»
    }
«ENDDEFINE»

«DEFINE BeanClassImplBase FOR BusinessClass»
    «EXPAND JavaComments::regenerationWarningHeader ("Mod4j BusinessDomainDsl generator: NewJavaBean.xpt") FOR this»

    package «getDomainRootPackage()»;

    «IF superclass == null »
        «EXPAND Imports::addTopLevelClassImports FOR this»
    «ENDIF»
    «EXPAND Imports::addImports»
    «REM»
        Add import statements for Attributes. If a dataType occurs more then once,
        the import statement will be added just once.
    «ENDREM»
    «FOREACH this.getAllProperties().dataType.toSet() AS dataType»
        «EXPAND Imports::addImports FOR this.getAllProperties().selectFirst(e|e.dataType == dataType)»
    «ENDFOREACH»
    «FOREACH businessRules.typeSelect(BusinessRule) AS br»
        import «javaBusinessRuleClassPath(br.name)»;
    «ENDFOREACH»

    /**
     * «description»
     *
     * @author Generated by Mod4j BusinessDomain DSL
     */
    @SuppressWarnings("serial")
    public abstract class «javaDomainBaseClass(name)» «IF superclass != null -»extends «javaDomainClass(superclass.name)» «ENDIF»implements java.io.Serializable {

    «IF superclass == null »
        «EXPAND ValidationSupport::addValidationInstance FOR this»
        «EXPAND Attributes::addIdAttribute FOR this»
        «EXPAND Attributes::addIdAccessors FOR this»
        «EXPAND Attributes::addVersionAttribute FOR this»
        «EXPAND Attributes::addVersionAccessors FOR this»
    «ENDIF»
    «EXPAND StandardOverrides::addToStringMethod FOR this»
     «EXPAND Attributes::addAttribute FOREACH properties.reject(e|e.derived)»
     «EXPAND Associations::addToReferenceVariable FOREACH associationsTo»
    «EXPAND Associations::addFromReferenceVariable FOREACH associationsFrom.select(e|e.bidirectional)»
    «EXPAND Constructors::createAddValidators FOR this»
    «IF !getAllProperties().reject(e|e.nullable || e.hasDefault || e.derived).isEmpty»
        «EXPAND Constructors::addDefaultImplBaseConstructor FOR this»
    «ENDIF»
    «EXPAND Constructors::addMinimalConstructor FOR this»
    «EXPAND Constructors::addIDImplBaseConstructor FOR this»
    «EXPAND Attributes::addGetter FOREACH properties.reject(e|e.derived)»
    «EXPAND Attributes::addSetter FOREACH properties.reject(e|e.derived)»
    «EXPAND Attributes::addAbstractSetter FOREACH properties.select(e|e.derived && e.writable)»
    «EXPAND Attributes::addAbstractGetter FOREACH properties.select(e|e.derived)»
    «EXPAND ValidationSupport::addValidationSwitch FOR this»
    }
«ENDDEFINE»

«DEFINE BeanClassExtensionPoint FOR AbstractType»
    «REM»No generation of AbstractTypes other than BusinessClasses«ENDREM»
«ENDDEFINE»

«DEFINE BeanClassExtensionPoint FOR BusinessClass-»
    «EXPAND JavaComments::extensionPointHeader ("Mod4j BusinessDomainDsl generator: NewJavaBean.xpt") FOR this»

    package «getDomainRootPackage()»;

    «REM»
        Add import statements for Attributes. If a dataType occurs more then once,
        the import statement will be added just once.
    «ENDREM»
    «FOREACH this.getAllProperties().dataType.toSet() AS dataType»
         «EXPAND Imports::addImports FOR this.getAllProperties().selectFirst(e|e.dataType == dataType)»
    «ENDFOREACH»
    /**
     * «description»
     *
     * @author Generated by Mod4j BusinessDomain DSL
     */
    public class «javaDomainClass(this.name)» extends «javaDomainBaseClass(this.name)» {

    «IF !getAllProperties().reject(e|e.nullable || e.hasDefault || e.derived).isEmpty»
        «EXPAND Constructors::addDefaultConstructor FOR this»
    «ENDIF»
    «EXPAND Constructors::addCallToSuperOnlyMinimalConstructor ("") FOR this»
    «EXPAND Constructors::addIDConstructor FOR this»

    «EXPAND Attributes::addEmptyGetter FOREACH properties.select(e|e.derived)»
    «EXPAND Attributes::addEmptySetter FOREACH properties.select(e|e.derived && e.writable)»
     }
«ENDDEFINE»

«DEFINE BeanClassQueryExample FOR BusinessClass»
    «EXPAND JavaComments::regenerationWarningHeader ("Mod4j BusinessDomainDsl generator: NewJavaBean.xpt") FOR this»

    package «getDomainRootPackage()»;

    /**
     * A subclass of «javaDomainClass(name)» to be used as example object
     * in Query-by-Example (QBE) queries. It turns off validation in the
     * no-argument constructor.
     *
     * @author Generated by Mod4j BusinessDomain DSL
     */
    public final class «javaDomainExampleClass(name)» extends «javaDomainClass(name)» {
        /**
         * Minimal public constructor
         */
        public «javaDomainExampleClass(name)»() {
            activateValidation(false);
            «EXPAND addNullSetters FOR this -»
        }

        /**
         * Creates an example object with the specified ID.
         *
         * @param id
         *            The identifier of the new object.
         */
        public «javaDomainExampleClass(name)»(Long id) {
            super(id);

            activateValidation(false);
            «EXPAND addNullSetters FOR this -»
        }
    }
«ENDDEFINE»

«DEFINE addNullSetters FOR BusinessClass -»
    «IF superclass != null -»
        «EXPAND addNullSetters FOR superclass -»
    «ENDIF -»
    «FOREACH this.properties.select(p|p.hasDefault) AS p -»
        «p.name» = null;
    «ENDFOREACH -»
«ENDDEFINE»
