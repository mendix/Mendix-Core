/*
* generated by Xtext
*/
grammar InternalService;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.mod4j.dsl.service.xtext.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.common.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.mod4j.dsl.service.xtext.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.common.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.mod4j.dsl.service.xtext.services.ServiceGrammarAccess;

}

@parser::members {
 
 	private ServiceGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(ServiceGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleServiceModel
entryRuleServiceModel :
{ before(grammarAccess.getServiceModelRule()); }
	 ruleServiceModel
{ after(grammarAccess.getServiceModelRule()); } 
	 EOF 
;

// Rule ServiceModel
ruleServiceModel 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getServiceModelAccess().getGroup()); }
(rule__ServiceModel__Group__0)
{ after(grammarAccess.getServiceModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssociationMethod
entryRuleAssociationMethod :
{ before(grammarAccess.getAssociationMethodRule()); }
	 ruleAssociationMethod
{ after(grammarAccess.getAssociationMethodRule()); } 
	 EOF 
;

// Rule AssociationMethod
ruleAssociationMethod 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getAssociationMethodAccess().getGroup()); }
(rule__AssociationMethod__Group__0)
{ after(grammarAccess.getAssociationMethodAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDtoReference
entryRuleDtoReference :
{ before(grammarAccess.getDtoReferenceRule()); }
	 ruleDtoReference
{ after(grammarAccess.getDtoReferenceRule()); } 
	 EOF 
;

// Rule DtoReference
ruleDtoReference 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getDtoReferenceAccess().getGroup()); }
(rule__DtoReference__Group__0)
{ after(grammarAccess.getDtoReferenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleServiceMethod
entryRuleServiceMethod :
{ before(grammarAccess.getServiceMethodRule()); }
	 ruleServiceMethod
{ after(grammarAccess.getServiceMethodRule()); } 
	 EOF 
;

// Rule ServiceMethod
ruleServiceMethod 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getServiceMethodAccess().getAlternatives()); }
(rule__ServiceMethod__Alternatives)
{ after(grammarAccess.getServiceMethodAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCustomMethod
entryRuleCustomMethod :
{ before(grammarAccess.getCustomMethodRule()); }
	 ruleCustomMethod
{ after(grammarAccess.getCustomMethodRule()); } 
	 EOF 
;

// Rule CustomMethod
ruleCustomMethod 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getCustomMethodAccess().getGroup()); }
(rule__CustomMethod__Group__0)
{ after(grammarAccess.getCustomMethodAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOutParameter
entryRuleOutParameter :
{ before(grammarAccess.getOutParameterRule()); }
	 ruleOutParameter
{ after(grammarAccess.getOutParameterRule()); } 
	 EOF 
;

// Rule OutParameter
ruleOutParameter 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getOutParameterAccess().getGroup()); }
(rule__OutParameter__Group__0)
{ after(grammarAccess.getOutParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameter
entryRuleParameter :
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getParameterAccess().getGroup()); }
(rule__Parameter__Group__0)
{ after(grammarAccess.getParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSpecialMethod
entryRuleSpecialMethod :
{ before(grammarAccess.getSpecialMethodRule()); }
	 ruleSpecialMethod
{ after(grammarAccess.getSpecialMethodRule()); } 
	 EOF 
;

// Rule SpecialMethod
ruleSpecialMethod 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getSpecialMethodAccess().getGroup()); }
(rule__SpecialMethod__Group__0)
{ after(grammarAccess.getSpecialMethodAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCrudService
entryRuleCrudService :
{ before(grammarAccess.getCrudServiceRule()); }
	 ruleCrudService
{ after(grammarAccess.getCrudServiceRule()); } 
	 EOF 
;

// Rule CrudService
ruleCrudService 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getCrudServiceAccess().getGroup()); }
(rule__CrudService__Group__0)
{ after(grammarAccess.getCrudServiceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule SpecialMethodType
ruleSpecialMethodType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecialMethodTypeAccess().getAlternatives()); }
(rule__SpecialMethodType__Alternatives)
{ after(grammarAccess.getSpecialMethodTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule AssociationMethodType
ruleAssociationMethodType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationMethodTypeAccess().getAlternatives()); }
(rule__AssociationMethodType__Alternatives)
{ after(grammarAccess.getAssociationMethodTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule CollectionType
ruleCollectionType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectionTypeAccess().getLISTEnumLiteralDeclaration()); }
(	'list' 
)
{ after(grammarAccess.getCollectionTypeAccess().getLISTEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__ServiceModel__Alternatives_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceModelAccess().getCrudServicesAssignment_5_0()); }
(rule__ServiceModel__CrudServicesAssignment_5_0)
{ after(grammarAccess.getServiceModelAccess().getCrudServicesAssignment_5_0()); }
)

    |(
{ before(grammarAccess.getServiceModelAccess().getMethodsAssignment_5_1()); }
(rule__ServiceModel__MethodsAssignment_5_1)
{ after(grammarAccess.getServiceModelAccess().getMethodsAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ServiceMethod__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceMethodAccess().getCustomMethodParserRuleCall_0()); }
	ruleCustomMethod
{ after(grammarAccess.getServiceMethodAccess().getCustomMethodParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getServiceMethodAccess().getSpecialMethodParserRuleCall_1()); }
	ruleSpecialMethod
{ after(grammarAccess.getServiceMethodAccess().getSpecialMethodParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getServiceMethodAccess().getAssociationMethodParserRuleCall_2()); }
	ruleAssociationMethod
{ after(grammarAccess.getServiceMethodAccess().getAssociationMethodParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialMethodType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecialMethodTypeAccess().getCREATEEnumLiteralDeclaration_0()); }
(	'create' 
)
{ after(grammarAccess.getSpecialMethodTypeAccess().getCREATEEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getSpecialMethodTypeAccess().getREADEnumLiteralDeclaration_1()); }
(	'read' 
)
{ after(grammarAccess.getSpecialMethodTypeAccess().getREADEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getSpecialMethodTypeAccess().getUPDATEEnumLiteralDeclaration_2()); }
(	'update' 
)
{ after(grammarAccess.getSpecialMethodTypeAccess().getUPDATEEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getSpecialMethodTypeAccess().getDELETEEnumLiteralDeclaration_3()); }
(	'delete' 
)
{ after(grammarAccess.getSpecialMethodTypeAccess().getDELETEEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getSpecialMethodTypeAccess().getLISTALLEnumLiteralDeclaration_4()); }
(	'listall' 
)
{ after(grammarAccess.getSpecialMethodTypeAccess().getLISTALLEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getSpecialMethodTypeAccess().getFINDEnumLiteralDeclaration_5()); }
(	'find' 
)
{ after(grammarAccess.getSpecialMethodTypeAccess().getFINDEnumLiteralDeclaration_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationMethodType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationMethodTypeAccess().getADDTOEnumLiteralDeclaration_0()); }
(	'add' 
)
{ after(grammarAccess.getAssociationMethodTypeAccess().getADDTOEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getAssociationMethodTypeAccess().getREMOVEFROMEnumLiteralDeclaration_1()); }
(	'remove' 
)
{ after(grammarAccess.getAssociationMethodTypeAccess().getREMOVEFROMEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getAssociationMethodTypeAccess().getGETFROMEnumLiteralDeclaration_2()); }
(	'get' 
)
{ after(grammarAccess.getAssociationMethodTypeAccess().getGETFROMEnumLiteralDeclaration_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__ServiceModel__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceModelAccess().getDescriptionAssignment_0()); }
(rule__ServiceModel__DescriptionAssignment_0)?
{ after(grammarAccess.getServiceModelAccess().getDescriptionAssignment_0()); }
)

	rule__ServiceModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ServiceModel__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceModelAccess().getServiceKeyword_1()); }

	'service' 

{ after(grammarAccess.getServiceModelAccess().getServiceKeyword_1()); }
)

	rule__ServiceModel__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__ServiceModel__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceModelAccess().getNameAssignment_2()); }
(rule__ServiceModel__NameAssignment_2)
{ after(grammarAccess.getServiceModelAccess().getNameAssignment_2()); }
)

	rule__ServiceModel__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__ServiceModel__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceModelAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getServiceModelAccess().getSemicolonKeyword_3()); }
)

	rule__ServiceModel__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__ServiceModel__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceModelAccess().getDtoReferencesAssignment_4()); }
(rule__ServiceModel__DtoReferencesAssignment_4)*
{ after(grammarAccess.getServiceModelAccess().getDtoReferencesAssignment_4()); }
)

	rule__ServiceModel__Group__5
;
finally {
	restoreStackSize(stackSize);
}


rule__ServiceModel__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceModelAccess().getAlternatives_5()); }
(rule__ServiceModel__Alternatives_5)*
{ after(grammarAccess.getServiceModelAccess().getAlternatives_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__AssociationMethod__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationMethodAccess().getDescriptionAssignment_0()); }
(rule__AssociationMethod__DescriptionAssignment_0)?
{ after(grammarAccess.getAssociationMethodAccess().getDescriptionAssignment_0()); }
)

	rule__AssociationMethod__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__AssociationMethod__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationMethodAccess().getNameAssignment_1()); }
(rule__AssociationMethod__NameAssignment_1)
{ after(grammarAccess.getAssociationMethodAccess().getNameAssignment_1()); }
)

	rule__AssociationMethod__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__AssociationMethod__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationMethodAccess().getMainAssignment_2()); }
(rule__AssociationMethod__MainAssignment_2)
{ after(grammarAccess.getAssociationMethodAccess().getMainAssignment_2()); }
)

	rule__AssociationMethod__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__AssociationMethod__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationMethodAccess().getReferenceKeyword_3()); }

	'reference' 

{ after(grammarAccess.getAssociationMethodAccess().getReferenceKeyword_3()); }
)

	rule__AssociationMethod__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__AssociationMethod__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationMethodAccess().getRolenameAssignment_4()); }
(rule__AssociationMethod__RolenameAssignment_4)
{ after(grammarAccess.getAssociationMethodAccess().getRolenameAssignment_4()); }
)

	rule__AssociationMethod__Group__5
;
finally {
	restoreStackSize(stackSize);
}


rule__AssociationMethod__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationMethodAccess().getTypeAssignment_5()); }
(rule__AssociationMethod__TypeAssignment_5)
{ after(grammarAccess.getAssociationMethodAccess().getTypeAssignment_5()); }
)

	rule__AssociationMethod__Group__6
;
finally {
	restoreStackSize(stackSize);
}


rule__AssociationMethod__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationMethodAccess().getPartAssignment_6()); }
(rule__AssociationMethod__PartAssignment_6)
{ after(grammarAccess.getAssociationMethodAccess().getPartAssignment_6()); }
)

	rule__AssociationMethod__Group__7
;
finally {
	restoreStackSize(stackSize);
}


rule__AssociationMethod__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationMethodAccess().getSemicolonKeyword_7()); }

	';' 

{ after(grammarAccess.getAssociationMethodAccess().getSemicolonKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__DtoReference__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDtoReferenceAccess().getFromKeyword_0()); }

	'from' 

{ after(grammarAccess.getDtoReferenceAccess().getFromKeyword_0()); }
)

	rule__DtoReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__DtoReference__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDtoReferenceAccess().getModelnameAssignment_1()); }
(rule__DtoReference__ModelnameAssignment_1)
{ after(grammarAccess.getDtoReferenceAccess().getModelnameAssignment_1()); }
)

	rule__DtoReference__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__DtoReference__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDtoReferenceAccess().getImportKeyword_2()); }

	'import' 

{ after(grammarAccess.getDtoReferenceAccess().getImportKeyword_2()); }
)

	rule__DtoReference__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__DtoReference__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDtoReferenceAccess().getNameAssignment_3()); }
(rule__DtoReference__NameAssignment_3)
{ after(grammarAccess.getDtoReferenceAccess().getNameAssignment_3()); }
)

	rule__DtoReference__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__DtoReference__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDtoReferenceAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getDtoReferenceAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__CustomMethod__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCustomMethodAccess().getDescriptionAssignment_0()); }
(rule__CustomMethod__DescriptionAssignment_0)?
{ after(grammarAccess.getCustomMethodAccess().getDescriptionAssignment_0()); }
)

	rule__CustomMethod__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__CustomMethod__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCustomMethodAccess().getMethodKeyword_1()); }

	'method' 

{ after(grammarAccess.getCustomMethodAccess().getMethodKeyword_1()); }
)

	rule__CustomMethod__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__CustomMethod__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCustomMethodAccess().getNameAssignment_2()); }
(rule__CustomMethod__NameAssignment_2)
{ after(grammarAccess.getCustomMethodAccess().getNameAssignment_2()); }
)

	rule__CustomMethod__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__CustomMethod__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCustomMethodAccess().getGroup_3()); }
(rule__CustomMethod__Group_3__0)?
{ after(grammarAccess.getCustomMethodAccess().getGroup_3()); }
)

	rule__CustomMethod__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__CustomMethod__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCustomMethodAccess().getGroup_4()); }
(rule__CustomMethod__Group_4__0)?
{ after(grammarAccess.getCustomMethodAccess().getGroup_4()); }
)

	rule__CustomMethod__Group__5
;
finally {
	restoreStackSize(stackSize);
}


rule__CustomMethod__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCustomMethodAccess().getSemicolonKeyword_5()); }

	';' 

{ after(grammarAccess.getCustomMethodAccess().getSemicolonKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__CustomMethod__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCustomMethodAccess().getInKeyword_3_0()); }

	'in' 

{ after(grammarAccess.getCustomMethodAccess().getInKeyword_3_0()); }
)

	rule__CustomMethod__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}


rule__CustomMethod__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCustomMethodAccess().getLeftParenthesisKeyword_3_1()); }

	'(' 

{ after(grammarAccess.getCustomMethodAccess().getLeftParenthesisKeyword_3_1()); }
)

	rule__CustomMethod__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}


rule__CustomMethod__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCustomMethodAccess().getInParametersAssignment_3_2()); }
(rule__CustomMethod__InParametersAssignment_3_2)
{ after(grammarAccess.getCustomMethodAccess().getInParametersAssignment_3_2()); }
)

	rule__CustomMethod__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}


rule__CustomMethod__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCustomMethodAccess().getGroup_3_3()); }
(rule__CustomMethod__Group_3_3__0)*
{ after(grammarAccess.getCustomMethodAccess().getGroup_3_3()); }
)

	rule__CustomMethod__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}


rule__CustomMethod__Group_3__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCustomMethodAccess().getRightParenthesisKeyword_3_4()); }

	')' 

{ after(grammarAccess.getCustomMethodAccess().getRightParenthesisKeyword_3_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__CustomMethod__Group_3_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCustomMethodAccess().getCommaKeyword_3_3_0()); }

	',' 

{ after(grammarAccess.getCustomMethodAccess().getCommaKeyword_3_3_0()); }
)

	rule__CustomMethod__Group_3_3__1
;
finally {
	restoreStackSize(stackSize);
}


rule__CustomMethod__Group_3_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCustomMethodAccess().getInParametersAssignment_3_3_1()); }
(rule__CustomMethod__InParametersAssignment_3_3_1)
{ after(grammarAccess.getCustomMethodAccess().getInParametersAssignment_3_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CustomMethod__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCustomMethodAccess().getOutKeyword_4_0()); }

	'out' 

{ after(grammarAccess.getCustomMethodAccess().getOutKeyword_4_0()); }
)

	rule__CustomMethod__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}


rule__CustomMethod__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCustomMethodAccess().getOutParameterAssignment_4_1()); }
(rule__CustomMethod__OutParameterAssignment_4_1)
{ after(grammarAccess.getCustomMethodAccess().getOutParameterAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OutParameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutParameterAccess().getDescriptionAssignment_0()); }
(rule__OutParameter__DescriptionAssignment_0)?
{ after(grammarAccess.getOutParameterAccess().getDescriptionAssignment_0()); }
)

	rule__OutParameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__OutParameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutParameterAccess().getCollectionAssignment_1()); }
(rule__OutParameter__CollectionAssignment_1)?
{ after(grammarAccess.getOutParameterAccess().getCollectionAssignment_1()); }
)

	rule__OutParameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__OutParameter__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutParameterAccess().getTypeAssignment_2()); }
(rule__OutParameter__TypeAssignment_2)
{ after(grammarAccess.getOutParameterAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Parameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getDescriptionAssignment_0()); }
(rule__Parameter__DescriptionAssignment_0)?
{ after(grammarAccess.getParameterAccess().getDescriptionAssignment_0()); }
)

	rule__Parameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getCollectionAssignment_1()); }
(rule__Parameter__CollectionAssignment_1)?
{ after(grammarAccess.getParameterAccess().getCollectionAssignment_1()); }
)

	rule__Parameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getTypeAssignment_2()); }
(rule__Parameter__TypeAssignment_2)
{ after(grammarAccess.getParameterAccess().getTypeAssignment_2()); }
)

	rule__Parameter__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getNameAssignment_3()); }
(rule__Parameter__NameAssignment_3)
{ after(grammarAccess.getParameterAccess().getNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__SpecialMethod__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecialMethodAccess().getDescriptionAssignment_0()); }
(rule__SpecialMethod__DescriptionAssignment_0)?
{ after(grammarAccess.getSpecialMethodAccess().getDescriptionAssignment_0()); }
)

	rule__SpecialMethod__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__SpecialMethod__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecialMethodAccess().getTypeAssignment_1()); }
(rule__SpecialMethod__TypeAssignment_1)
{ after(grammarAccess.getSpecialMethodAccess().getTypeAssignment_1()); }
)

	rule__SpecialMethod__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__SpecialMethod__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecialMethodAccess().getNameAssignment_2()); }
(rule__SpecialMethod__NameAssignment_2)
{ after(grammarAccess.getSpecialMethodAccess().getNameAssignment_2()); }
)

	rule__SpecialMethod__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__SpecialMethod__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecialMethodAccess().getForKeyword_3()); }

	'for' 

{ after(grammarAccess.getSpecialMethodAccess().getForKeyword_3()); }
)

	rule__SpecialMethod__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__SpecialMethod__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecialMethodAccess().getDtoAssignment_4()); }
(rule__SpecialMethod__DtoAssignment_4)
{ after(grammarAccess.getSpecialMethodAccess().getDtoAssignment_4()); }
)

	rule__SpecialMethod__Group__5
;
finally {
	restoreStackSize(stackSize);
}


rule__SpecialMethod__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecialMethodAccess().getSemicolonKeyword_5()); }

	';' 

{ after(grammarAccess.getSpecialMethodAccess().getSemicolonKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__CrudService__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCrudServiceAccess().getDescriptionAssignment_0()); }
(rule__CrudService__DescriptionAssignment_0)?
{ after(grammarAccess.getCrudServiceAccess().getDescriptionAssignment_0()); }
)

	rule__CrudService__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__CrudService__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCrudServiceAccess().getCrudKeyword_1()); }

	'crud' 

{ after(grammarAccess.getCrudServiceAccess().getCrudKeyword_1()); }
)

	rule__CrudService__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__CrudService__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCrudServiceAccess().getDtoAssignment_2()); }
(rule__CrudService__DtoAssignment_2)
{ after(grammarAccess.getCrudServiceAccess().getDtoAssignment_2()); }
)

	rule__CrudService__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__CrudService__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCrudServiceAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getCrudServiceAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ServiceModel__DescriptionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceModelAccess().getDescriptionSTRINGTerminalRuleCall_0_0()); }
	RULE_STRING{ after(grammarAccess.getServiceModelAccess().getDescriptionSTRINGTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ServiceModel__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceModelAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getServiceModelAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ServiceModel__DtoReferencesAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceModelAccess().getDtoReferencesDtoReferenceParserRuleCall_4_0()); }
	ruleDtoReference{ after(grammarAccess.getServiceModelAccess().getDtoReferencesDtoReferenceParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ServiceModel__CrudServicesAssignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceModelAccess().getCrudServicesCrudServiceParserRuleCall_5_0_0()); }
	ruleCrudService{ after(grammarAccess.getServiceModelAccess().getCrudServicesCrudServiceParserRuleCall_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ServiceModel__MethodsAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceModelAccess().getMethodsServiceMethodParserRuleCall_5_1_0()); }
	ruleServiceMethod{ after(grammarAccess.getServiceModelAccess().getMethodsServiceMethodParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationMethod__DescriptionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationMethodAccess().getDescriptionSTRINGTerminalRuleCall_0_0()); }
	RULE_STRING{ after(grammarAccess.getAssociationMethodAccess().getDescriptionSTRINGTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationMethod__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationMethodAccess().getNameForKeyword_1_0()); }
(
{ before(grammarAccess.getAssociationMethodAccess().getNameForKeyword_1_0()); }

	'for' 

{ after(grammarAccess.getAssociationMethodAccess().getNameForKeyword_1_0()); }
)

{ after(grammarAccess.getAssociationMethodAccess().getNameForKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationMethod__MainAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationMethodAccess().getMainDtoReferenceCrossReference_2_0()); }
(
{ before(grammarAccess.getAssociationMethodAccess().getMainDtoReferenceIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getAssociationMethodAccess().getMainDtoReferenceIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getAssociationMethodAccess().getMainDtoReferenceCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationMethod__RolenameAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationMethodAccess().getRolenameIDTerminalRuleCall_4_0()); }
	RULE_ID{ after(grammarAccess.getAssociationMethodAccess().getRolenameIDTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationMethod__TypeAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationMethodAccess().getTypeAssociationMethodTypeEnumRuleCall_5_0()); }
	ruleAssociationMethodType{ after(grammarAccess.getAssociationMethodAccess().getTypeAssociationMethodTypeEnumRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationMethod__PartAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationMethodAccess().getPartDtoReferenceCrossReference_6_0()); }
(
{ before(grammarAccess.getAssociationMethodAccess().getPartDtoReferenceIDTerminalRuleCall_6_0_1()); }
	RULE_ID{ after(grammarAccess.getAssociationMethodAccess().getPartDtoReferenceIDTerminalRuleCall_6_0_1()); }
)
{ after(grammarAccess.getAssociationMethodAccess().getPartDtoReferenceCrossReference_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DtoReference__ModelnameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDtoReferenceAccess().getModelnameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getDtoReferenceAccess().getModelnameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DtoReference__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDtoReferenceAccess().getNameIDTerminalRuleCall_3_0()); }
	RULE_ID{ after(grammarAccess.getDtoReferenceAccess().getNameIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CustomMethod__DescriptionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCustomMethodAccess().getDescriptionSTRINGTerminalRuleCall_0_0()); }
	RULE_STRING{ after(grammarAccess.getCustomMethodAccess().getDescriptionSTRINGTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CustomMethod__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCustomMethodAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getCustomMethodAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CustomMethod__InParametersAssignment_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCustomMethodAccess().getInParametersParameterParserRuleCall_3_2_0()); }
	ruleParameter{ after(grammarAccess.getCustomMethodAccess().getInParametersParameterParserRuleCall_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CustomMethod__InParametersAssignment_3_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCustomMethodAccess().getInParametersParameterParserRuleCall_3_3_1_0()); }
	ruleParameter{ after(grammarAccess.getCustomMethodAccess().getInParametersParameterParserRuleCall_3_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CustomMethod__OutParameterAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCustomMethodAccess().getOutParameterOutParameterParserRuleCall_4_1_0()); }
	ruleOutParameter{ after(grammarAccess.getCustomMethodAccess().getOutParameterOutParameterParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OutParameter__DescriptionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutParameterAccess().getDescriptionSTRINGTerminalRuleCall_0_0()); }
	RULE_STRING{ after(grammarAccess.getOutParameterAccess().getDescriptionSTRINGTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OutParameter__CollectionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutParameterAccess().getCollectionCollectionTypeEnumRuleCall_1_0()); }
	ruleCollectionType{ after(grammarAccess.getOutParameterAccess().getCollectionCollectionTypeEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OutParameter__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutParameterAccess().getTypeDtoReferenceCrossReference_2_0()); }
(
{ before(grammarAccess.getOutParameterAccess().getTypeDtoReferenceIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getOutParameterAccess().getTypeDtoReferenceIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getOutParameterAccess().getTypeDtoReferenceCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__DescriptionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getDescriptionSTRINGTerminalRuleCall_0_0()); }
	RULE_STRING{ after(grammarAccess.getParameterAccess().getDescriptionSTRINGTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__CollectionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getCollectionCollectionTypeEnumRuleCall_1_0()); }
	ruleCollectionType{ after(grammarAccess.getParameterAccess().getCollectionCollectionTypeEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getTypeDtoReferenceCrossReference_2_0()); }
(
{ before(grammarAccess.getParameterAccess().getTypeDtoReferenceIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getParameterAccess().getTypeDtoReferenceIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getParameterAccess().getTypeDtoReferenceCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_3_0()); }
	RULE_ID{ after(grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialMethod__DescriptionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecialMethodAccess().getDescriptionSTRINGTerminalRuleCall_0_0()); }
	RULE_STRING{ after(grammarAccess.getSpecialMethodAccess().getDescriptionSTRINGTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialMethod__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecialMethodAccess().getTypeSpecialMethodTypeEnumRuleCall_1_0()); }
	ruleSpecialMethodType{ after(grammarAccess.getSpecialMethodAccess().getTypeSpecialMethodTypeEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialMethod__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecialMethodAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getSpecialMethodAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialMethod__DtoAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecialMethodAccess().getDtoDtoReferenceCrossReference_4_0()); }
(
{ before(grammarAccess.getSpecialMethodAccess().getDtoDtoReferenceIDTerminalRuleCall_4_0_1()); }
	RULE_ID{ after(grammarAccess.getSpecialMethodAccess().getDtoDtoReferenceIDTerminalRuleCall_4_0_1()); }
)
{ after(grammarAccess.getSpecialMethodAccess().getDtoDtoReferenceCrossReference_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CrudService__DescriptionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCrudServiceAccess().getDescriptionSTRINGTerminalRuleCall_0_0()); }
	RULE_STRING{ after(grammarAccess.getCrudServiceAccess().getDescriptionSTRINGTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CrudService__DtoAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCrudServiceAccess().getDtoDtoReferenceCrossReference_2_0()); }
(
{ before(grammarAccess.getCrudServiceAccess().getDtoDtoReferenceIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getCrudServiceAccess().getDtoDtoReferenceIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getCrudServiceAccess().getDtoDtoReferenceCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


