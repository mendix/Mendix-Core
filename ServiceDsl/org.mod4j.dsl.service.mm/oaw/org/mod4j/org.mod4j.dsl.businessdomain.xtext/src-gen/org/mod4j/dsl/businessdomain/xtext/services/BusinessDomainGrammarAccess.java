/*
* generated by Xtext
*/

package org.mendix.dsl.businessdomain.xtext.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import org.eclipse.xtext.*;

import org.eclipse.xtext.service.GrammarProvider;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class BusinessDomainGrammarAccess implements IGrammarAccess {
	
	
	public class BusinessDomainModelElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BusinessDomainModel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDescriptionAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_0_0 = (RuleCall)cDescriptionAssignment_0.eContents().get(0);
		private final Keyword cDomainKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final Assignment cTypesAssignment_4_0 = (Assignment)cAlternatives_4.eContents().get(0);
		private final RuleCall cTypesBusinessClassParserRuleCall_4_0_0 = (RuleCall)cTypesAssignment_4_0.eContents().get(0);
		private final Assignment cEnumerationsAssignment_4_1 = (Assignment)cAlternatives_4.eContents().get(1);
		private final RuleCall cEnumerationsEnumerationParserRuleCall_4_1_0 = (RuleCall)cEnumerationsAssignment_4_1.eContents().get(0);
		private final Assignment cAssociationsAssignment_4_2 = (Assignment)cAlternatives_4.eContents().get(2);
		private final RuleCall cAssociationsAssociationParserRuleCall_4_2_0 = (RuleCall)cAssociationsAssignment_4_2.eContents().get(0);
		
		//BusinessDomainModel:
		//  description=STRING? "domain" name=ID ";" (types+=BusinessClass|enumerations+=
		//  Enumeration|associations+=Association)*; 
		//
		/// *******************************************************************************
		// * Copyright (c) 2009 Ordina and committers to Mod4j
		// * All rights reserved. This program and the accompanying materials
		// * are made available under the terms of the Eclipse Public License v1.0
		// * which accompanies this distribution, and is available at
		// * http://www.eclipse.org/legal/epl-v10.html
		// *
		// * Contributors:
		// *     Ordina - initial implementation
		// ******************************************************************************* /
		//
		//  
		//	  
		//	        
		////	(types+= BusinessClassReference)*
		//	                
		//	          
		//	      
		//	 
		//	
		//// COMMETNED OUT: import does not work correctly, therefore should not be possible at all.
		////BusinessClassReference:
		////    "from" referredModel=ID "import" name=ID  ";" 
		////    ;
		public ParserRule getRule() { return rule; }

		//description=STRING? "domain" name=ID ";" (types+=BusinessClass|enumerations+=
		//Enumeration|associations+=Association)* 
		//	  
		//	        
		////	(types+= BusinessClassReference)*
		public Group getGroup() { return cGroup; }

		//description=STRING?
		public Assignment getDescriptionAssignment_0() { return cDescriptionAssignment_0; }

		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_0_0() { return cDescriptionSTRINGTerminalRuleCall_0_0; }

		//"domain"
		public Keyword getDomainKeyword_1() { return cDomainKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//";"   
		////	(types+= BusinessClassReference)*
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }

		//(types+=BusinessClass|enumerations+=Enumeration|associations+=Association)* 
		////	(types+= BusinessClassReference)*
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//types+=BusinessClass
		public Assignment getTypesAssignment_4_0() { return cTypesAssignment_4_0; }

		//BusinessClass
		public RuleCall getTypesBusinessClassParserRuleCall_4_0_0() { return cTypesBusinessClassParserRuleCall_4_0_0; }

		//enumerations+=Enumeration
		public Assignment getEnumerationsAssignment_4_1() { return cEnumerationsAssignment_4_1; }

		//Enumeration
		public RuleCall getEnumerationsEnumerationParserRuleCall_4_1_0() { return cEnumerationsEnumerationParserRuleCall_4_1_0; }

		//associations+=Association
		public Assignment getAssociationsAssignment_4_2() { return cAssociationsAssignment_4_2; }

		//Association
		public RuleCall getAssociationsAssociationParserRuleCall_4_2_0() { return cAssociationsAssociationParserRuleCall_4_2_0; }
	}

	public class AssociationElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Association");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDescriptionAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_0_0 = (RuleCall)cDescriptionAssignment_0.eContents().get(0);
		private final Keyword cAssociationKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cSourceAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cSourceBusinessClassCrossReference_2_0 = (CrossReference)cSourceAssignment_2.eContents().get(0);
		private final RuleCall cSourceBusinessClassIDTerminalRuleCall_2_0_1 = (RuleCall)cSourceBusinessClassCrossReference_2_0.eContents().get(1);
		private final Assignment cSourceRoleNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cSourceRoleNameIDTerminalRuleCall_3_0 = (RuleCall)cSourceRoleNameAssignment_3.eContents().get(0);
		private final Assignment cSourceMultiplicityAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cSourceMultiplicityMultiplicityEnumRuleCall_4_0 = (RuleCall)cSourceMultiplicityAssignment_4.eContents().get(0);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final Assignment cBidirectionalAssignment_5_0 = (Assignment)cAlternatives_5.eContents().get(0);
		private final Keyword cBidirectionalLessThanSignHyphenMinusGreaterThanSignKeyword_5_0_0 = (Keyword)cBidirectionalAssignment_5_0.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_5_1 = (Keyword)cAlternatives_5.eContents().get(1);
		private final Assignment cTargetMultiplicityAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cTargetMultiplicityMultiplicityEnumRuleCall_6_0 = (RuleCall)cTargetMultiplicityAssignment_6.eContents().get(0);
		private final Assignment cTargetAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final CrossReference cTargetAbstractBusinessClassCrossReference_7_0 = (CrossReference)cTargetAssignment_7.eContents().get(0);
		private final RuleCall cTargetAbstractBusinessClassIDTerminalRuleCall_7_0_1 = (RuleCall)cTargetAbstractBusinessClassCrossReference_7_0.eContents().get(1);
		private final Assignment cTargetRoleNameAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cTargetRoleNameIDTerminalRuleCall_8_0 = (RuleCall)cTargetRoleNameAssignment_8.eContents().get(0);
		private final Assignment cOrderedAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final Keyword cOrderedOrderedKeyword_9_0 = (Keyword)cOrderedAssignment_9.eContents().get(0);
		private final Keyword cSemicolonKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//Association:
		//  description=STRING? "association" source=[BusinessClass] sourceRoleName=ID
		//  sourceMultiplicity=Multiplicity (bidirectional?="<->"|"->") targetMultiplicity=
		//  Multiplicity target=[AbstractBusinessClass] targetRoleName=ID ordered?="ordered"?
		//  ";"; 
		//// COMMETNED OUT: import does not work correctly, therefore should not be possible at all.
		////BusinessClassReference:
		////    "from" referredModel=ID "import" name=ID  ";" 
		////    ;
		public ParserRule getRule() { return rule; }

		//description=STRING? "association" source=[BusinessClass] sourceRoleName=ID
		//sourceMultiplicity=Multiplicity (bidirectional?="<->"|"->") targetMultiplicity=
		//Multiplicity target=[AbstractBusinessClass] targetRoleName=ID ordered?="ordered"?
		//";"
		public Group getGroup() { return cGroup; }

		//description=STRING?
		public Assignment getDescriptionAssignment_0() { return cDescriptionAssignment_0; }

		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_0_0() { return cDescriptionSTRINGTerminalRuleCall_0_0; }

		//"association"
		public Keyword getAssociationKeyword_1() { return cAssociationKeyword_1; }

		//source=[BusinessClass]
		public Assignment getSourceAssignment_2() { return cSourceAssignment_2; }

		//[BusinessClass]
		public CrossReference getSourceBusinessClassCrossReference_2_0() { return cSourceBusinessClassCrossReference_2_0; }

		//ID
		public RuleCall getSourceBusinessClassIDTerminalRuleCall_2_0_1() { return cSourceBusinessClassIDTerminalRuleCall_2_0_1; }

		//sourceRoleName=ID
		public Assignment getSourceRoleNameAssignment_3() { return cSourceRoleNameAssignment_3; }

		//ID
		public RuleCall getSourceRoleNameIDTerminalRuleCall_3_0() { return cSourceRoleNameIDTerminalRuleCall_3_0; }

		//sourceMultiplicity=Multiplicity
		public Assignment getSourceMultiplicityAssignment_4() { return cSourceMultiplicityAssignment_4; }

		//Multiplicity
		public RuleCall getSourceMultiplicityMultiplicityEnumRuleCall_4_0() { return cSourceMultiplicityMultiplicityEnumRuleCall_4_0; }

		//bidirectional?="<->"|"->"
		public Alternatives getAlternatives_5() { return cAlternatives_5; }

		//bidirectional?="<->"
		public Assignment getBidirectionalAssignment_5_0() { return cBidirectionalAssignment_5_0; }

		//"<->"
		public Keyword getBidirectionalLessThanSignHyphenMinusGreaterThanSignKeyword_5_0_0() { return cBidirectionalLessThanSignHyphenMinusGreaterThanSignKeyword_5_0_0; }

		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_5_1() { return cHyphenMinusGreaterThanSignKeyword_5_1; }

		//targetMultiplicity=Multiplicity
		public Assignment getTargetMultiplicityAssignment_6() { return cTargetMultiplicityAssignment_6; }

		//Multiplicity
		public RuleCall getTargetMultiplicityMultiplicityEnumRuleCall_6_0() { return cTargetMultiplicityMultiplicityEnumRuleCall_6_0; }

		//target=[AbstractBusinessClass]
		public Assignment getTargetAssignment_7() { return cTargetAssignment_7; }

		//[AbstractBusinessClass]
		public CrossReference getTargetAbstractBusinessClassCrossReference_7_0() { return cTargetAbstractBusinessClassCrossReference_7_0; }

		//ID
		public RuleCall getTargetAbstractBusinessClassIDTerminalRuleCall_7_0_1() { return cTargetAbstractBusinessClassIDTerminalRuleCall_7_0_1; }

		//targetRoleName=ID
		public Assignment getTargetRoleNameAssignment_8() { return cTargetRoleNameAssignment_8; }

		//ID
		public RuleCall getTargetRoleNameIDTerminalRuleCall_8_0() { return cTargetRoleNameIDTerminalRuleCall_8_0; }

		//ordered?="ordered"?
		public Assignment getOrderedAssignment_9() { return cOrderedAssignment_9; }

		//"ordered"
		public Keyword getOrderedOrderedKeyword_9_0() { return cOrderedOrderedKeyword_9_0; }

		//";"
		public Keyword getSemicolonKeyword_10() { return cSemicolonKeyword_10; }
	}

	public class BusinessClassElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BusinessClass");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDescriptionAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_0_0 = (RuleCall)cDescriptionAssignment_0.eContents().get(0);
		private final Keyword cClassKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cInheritsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cSuperclassAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cSuperclassBusinessClassCrossReference_3_1_0 = (CrossReference)cSuperclassAssignment_3_1.eContents().get(0);
		private final RuleCall cSuperclassBusinessClassIDTerminalRuleCall_3_1_0_1 = (RuleCall)cSuperclassBusinessClassCrossReference_3_1_0.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cPropertiesAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cPropertiesPropertyParserRuleCall_5_0 = (RuleCall)cPropertiesAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cRulesKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cBusinessRulesAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cBusinessRulesAbstractBusinessRuleParserRuleCall_6_2_0 = (RuleCall)cBusinessRulesAssignment_6_2.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_6_3 = (Keyword)cGroup_6.eContents().get(3);
		private final Keyword cRightSquareBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//BusinessClass:
		//  description=STRING? "class" name=ID ("inherits" superclass=[BusinessClass])? "["
		//  properties+=Property* ("rules" "[" businessRules+=AbstractBusinessRule* "]")? "]";
		public ParserRule getRule() { return rule; }

		//description=STRING? "class" name=ID ("inherits" superclass=[BusinessClass])? "["
		//properties+=Property* ("rules" "[" businessRules+=AbstractBusinessRule* "]")? "]"
		public Group getGroup() { return cGroup; }

		//description=STRING?
		public Assignment getDescriptionAssignment_0() { return cDescriptionAssignment_0; }

		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_0_0() { return cDescriptionSTRINGTerminalRuleCall_0_0; }

		//"class"
		public Keyword getClassKeyword_1() { return cClassKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//("inherits" superclass=[BusinessClass])?
		public Group getGroup_3() { return cGroup_3; }

		//"inherits"
		public Keyword getInheritsKeyword_3_0() { return cInheritsKeyword_3_0; }

		//superclass=[BusinessClass]
		public Assignment getSuperclassAssignment_3_1() { return cSuperclassAssignment_3_1; }

		//[BusinessClass]
		public CrossReference getSuperclassBusinessClassCrossReference_3_1_0() { return cSuperclassBusinessClassCrossReference_3_1_0; }

		//ID
		public RuleCall getSuperclassBusinessClassIDTerminalRuleCall_3_1_0_1() { return cSuperclassBusinessClassIDTerminalRuleCall_3_1_0_1; }

		//"["
		public Keyword getLeftSquareBracketKeyword_4() { return cLeftSquareBracketKeyword_4; }

		//properties+=Property*
		public Assignment getPropertiesAssignment_5() { return cPropertiesAssignment_5; }

		//Property
		public RuleCall getPropertiesPropertyParserRuleCall_5_0() { return cPropertiesPropertyParserRuleCall_5_0; }

		//("rules" "[" businessRules+=AbstractBusinessRule* "]")?
		public Group getGroup_6() { return cGroup_6; }

		//"rules"
		public Keyword getRulesKeyword_6_0() { return cRulesKeyword_6_0; }

		//"["
		public Keyword getLeftSquareBracketKeyword_6_1() { return cLeftSquareBracketKeyword_6_1; }

		//businessRules+=AbstractBusinessRule*
		public Assignment getBusinessRulesAssignment_6_2() { return cBusinessRulesAssignment_6_2; }

		//AbstractBusinessRule
		public RuleCall getBusinessRulesAbstractBusinessRuleParserRuleCall_6_2_0() { return cBusinessRulesAbstractBusinessRuleParserRuleCall_6_2_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_6_3() { return cRightSquareBracketKeyword_6_3; }

		//"]"
		public Keyword getRightSquareBracketKeyword_7() { return cRightSquareBracketKeyword_7; }
	}

	public class EnumerationElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Enumeration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDescriptionAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_0_0 = (RuleCall)cDescriptionAssignment_0.eContents().get(0);
		private final Keyword cEnumerationKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cEnumerationLiteralsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cEnumerationLiteralsEnumerationLiteralParserRuleCall_4_0 = (RuleCall)cEnumerationLiteralsAssignment_4.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Enumeration:
		//  description=STRING? "enumeration" name=ID "[" enumerationLiterals+=
		//  EnumerationLiteral+ "]";
		public ParserRule getRule() { return rule; }

		//description=STRING? "enumeration" name=ID "[" enumerationLiterals+=
		//EnumerationLiteral+ "]"
		public Group getGroup() { return cGroup; }

		//description=STRING?
		public Assignment getDescriptionAssignment_0() { return cDescriptionAssignment_0; }

		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_0_0() { return cDescriptionSTRINGTerminalRuleCall_0_0; }

		//"enumeration"
		public Keyword getEnumerationKeyword_1() { return cEnumerationKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//"["
		public Keyword getLeftSquareBracketKeyword_3() { return cLeftSquareBracketKeyword_3; }

		//enumerationLiterals+=EnumerationLiteral+
		public Assignment getEnumerationLiteralsAssignment_4() { return cEnumerationLiteralsAssignment_4; }

		//EnumerationLiteral
		public RuleCall getEnumerationLiteralsEnumerationLiteralParserRuleCall_4_0() { return cEnumerationLiteralsEnumerationLiteralParserRuleCall_4_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_5() { return cRightSquareBracketKeyword_5; }
	}

	public class EnumerationLiteralElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EnumerationLiteral");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cEqualsSignKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cPersistedValueAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cPersistedValueINTTerminalRuleCall_1_1_0 = (RuleCall)cPersistedValueAssignment_1_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//EnumerationLiteral:
		//  name=ID ("=" persistedValue=INT) ";";
		public ParserRule getRule() { return rule; }

		//name=ID ("=" persistedValue=INT) ";"
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//"=" persistedValue=INT
		public Group getGroup_1() { return cGroup_1; }

		//"="
		public Keyword getEqualsSignKeyword_1_0() { return cEqualsSignKeyword_1_0; }

		//persistedValue=INT
		public Assignment getPersistedValueAssignment_1_1() { return cPersistedValueAssignment_1_1; }

		//INT
		public RuleCall getPersistedValueINTTerminalRuleCall_1_1_0() { return cPersistedValueINTTerminalRuleCall_1_1_0; }

		//";"
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}

	public class AbstractBusinessRuleElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AbstractBusinessRule");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cBusinessRuleParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cUniqueRuleParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//AbstractBusinessRule:
		//  BusinessRule|UniqueRule;
		public ParserRule getRule() { return rule; }

		//BusinessRule|UniqueRule
		public Alternatives getAlternatives() { return cAlternatives; }

		//BusinessRule
		public RuleCall getBusinessRuleParserRuleCall_0() { return cBusinessRuleParserRuleCall_0; }

		//UniqueRule
		public RuleCall getUniqueRuleParserRuleCall_1() { return cUniqueRuleParserRuleCall_1; }
	}

	public class BusinessRuleElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BusinessRule");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDescriptionAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_0_0 = (RuleCall)cDescriptionAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//BusinessRule:
		//  description=STRING? name=ID ";";
		public ParserRule getRule() { return rule; }

		//description=STRING? name=ID ";"
		public Group getGroup() { return cGroup; }

		//description=STRING?
		public Assignment getDescriptionAssignment_0() { return cDescriptionAssignment_0; }

		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_0_0() { return cDescriptionSTRINGTerminalRuleCall_0_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//";"
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}

	public class UniqueRuleElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UniqueRule");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDescriptionAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_0_0 = (RuleCall)cDescriptionAssignment_0.eContents().get(0);
		private final Keyword cUniqueKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cPropertiesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cPropertiesPropertyCrossReference_4_0 = (CrossReference)cPropertiesAssignment_4.eContents().get(0);
		private final RuleCall cPropertiesPropertyIDTerminalRuleCall_4_0_1 = (RuleCall)cPropertiesPropertyCrossReference_4_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cPropertiesAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cPropertiesPropertyCrossReference_5_1_0 = (CrossReference)cPropertiesAssignment_5_1.eContents().get(0);
		private final RuleCall cPropertiesPropertyIDTerminalRuleCall_5_1_0_1 = (RuleCall)cPropertiesPropertyCrossReference_5_1_0.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//UniqueRule:
		//  description=STRING? "unique" name=ID "[" properties+=[Property] ("," properties+=[
		//  Property])* "]";
		public ParserRule getRule() { return rule; }

		//description=STRING? "unique" name=ID "[" properties+=[Property] ("," properties+=[
		//Property])* "]"
		public Group getGroup() { return cGroup; }

		//description=STRING?
		public Assignment getDescriptionAssignment_0() { return cDescriptionAssignment_0; }

		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_0_0() { return cDescriptionSTRINGTerminalRuleCall_0_0; }

		//"unique"
		public Keyword getUniqueKeyword_1() { return cUniqueKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//"["
		public Keyword getLeftSquareBracketKeyword_3() { return cLeftSquareBracketKeyword_3; }

		//properties+=[Property]
		public Assignment getPropertiesAssignment_4() { return cPropertiesAssignment_4; }

		//[Property]
		public CrossReference getPropertiesPropertyCrossReference_4_0() { return cPropertiesPropertyCrossReference_4_0; }

		//ID
		public RuleCall getPropertiesPropertyIDTerminalRuleCall_4_0_1() { return cPropertiesPropertyIDTerminalRuleCall_4_0_1; }

		//("," properties+=[Property])*
		public Group getGroup_5() { return cGroup_5; }

		//","
		public Keyword getCommaKeyword_5_0() { return cCommaKeyword_5_0; }

		//properties+=[Property]
		public Assignment getPropertiesAssignment_5_1() { return cPropertiesAssignment_5_1; }

		//[Property]
		public CrossReference getPropertiesPropertyCrossReference_5_1_0() { return cPropertiesPropertyCrossReference_5_1_0; }

		//ID
		public RuleCall getPropertiesPropertyIDTerminalRuleCall_5_1_0_1() { return cPropertiesPropertyIDTerminalRuleCall_5_1_0_1; }

		//"]"
		public Keyword getRightSquareBracketKeyword_6() { return cRightSquareBracketKeyword_6; }
	}

	public class PropertyElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Property");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final RuleCall cBoolPropertyParserRuleCall_0_0 = (RuleCall)cAlternatives_0.eContents().get(0);
		private final RuleCall cStringPropertyParserRuleCall_0_1 = (RuleCall)cAlternatives_0.eContents().get(1);
		private final RuleCall cDateTimePropertyParserRuleCall_0_2 = (RuleCall)cAlternatives_0.eContents().get(2);
		private final RuleCall cIntegerPropertyParserRuleCall_0_3 = (RuleCall)cAlternatives_0.eContents().get(3);
		private final RuleCall cDecimalPropertyParserRuleCall_0_4 = (RuleCall)cAlternatives_0.eContents().get(4);
		private final RuleCall cEnumerationPropertyParserRuleCall_0_5 = (RuleCall)cAlternatives_0.eContents().get(5);
		private final Assignment cNullableAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cNullableNullableKeyword_1_0 = (Keyword)cNullableAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cDerivedAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final Keyword cDerivedDerivedKeyword_2_0_0 = (Keyword)cDerivedAssignment_2_0.eContents().get(0);
		private final Assignment cWritableAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final Keyword cWritableWritableKeyword_2_1_0 = (Keyword)cWritableAssignment_2_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Property:
		//  (BoolProperty|StringProperty|DateTimeProperty|IntegerProperty|DecimalProperty|
		//  EnumerationProperty) nullable?="nullable"? (derived?="derived" writable?="writable"
		//  ?)? ";"; 
		//
		//
		//                  
		//	      
		//	
		//	  
		////	("persistency" persistency=PersistencyMode)?
		public ParserRule getRule() { return rule; }

		//(BoolProperty|StringProperty|DateTimeProperty|IntegerProperty|DecimalProperty|
		//EnumerationProperty) nullable?="nullable"? (derived?="derived" writable?="writable"
		//?)? ";" 
		//                  
		//	      
		//	
		//	  
		////	("persistency" persistency=PersistencyMode)?
		public Group getGroup() { return cGroup; }

		//BoolProperty|StringProperty|DateTimeProperty|IntegerProperty|DecimalProperty|
		//EnumerationProperty
		public Alternatives getAlternatives_0() { return cAlternatives_0; }

		//BoolProperty
		public RuleCall getBoolPropertyParserRuleCall_0_0() { return cBoolPropertyParserRuleCall_0_0; }

		//StringProperty
		public RuleCall getStringPropertyParserRuleCall_0_1() { return cStringPropertyParserRuleCall_0_1; }

		//DateTimeProperty
		public RuleCall getDateTimePropertyParserRuleCall_0_2() { return cDateTimePropertyParserRuleCall_0_2; }

		//IntegerProperty
		public RuleCall getIntegerPropertyParserRuleCall_0_3() { return cIntegerPropertyParserRuleCall_0_3; }

		//DecimalProperty
		public RuleCall getDecimalPropertyParserRuleCall_0_4() { return cDecimalPropertyParserRuleCall_0_4; }

		//EnumerationProperty
		public RuleCall getEnumerationPropertyParserRuleCall_0_5() { return cEnumerationPropertyParserRuleCall_0_5; }

		//nullable?="nullable"?
		public Assignment getNullableAssignment_1() { return cNullableAssignment_1; }

		//"nullable"
		public Keyword getNullableNullableKeyword_1_0() { return cNullableNullableKeyword_1_0; }

		//(derived?="derived" writable?="writable"?)?
		public Group getGroup_2() { return cGroup_2; }

		//derived?="derived"
		public Assignment getDerivedAssignment_2_0() { return cDerivedAssignment_2_0; }

		//"derived"
		public Keyword getDerivedDerivedKeyword_2_0_0() { return cDerivedDerivedKeyword_2_0_0; }

		//writable?="writable"?
		public Assignment getWritableAssignment_2_1() { return cWritableAssignment_2_1; }

		//"writable"
		public Keyword getWritableWritableKeyword_2_1_0() { return cWritableWritableKeyword_2_1_0; }

		//";" 
		////	("persistency" persistency=PersistencyMode)?
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}

	public class BoolPropertyElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BoolProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDescriptionAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_0_0 = (RuleCall)cDescriptionAssignment_0.eContents().get(0);
		private final Assignment cDataTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cDataTypeBooleanKeyword_1_0 = (Keyword)cDataTypeAssignment_1.eContents().get(0);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cHasDefaultAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final Keyword cHasDefaultDefaultKeyword_3_0_0 = (Keyword)cHasDefaultAssignment_3_0.eContents().get(0);
		private final Alternatives cAlternatives_3_1 = (Alternatives)cGroup_3.eContents().get(1);
		private final Assignment cDefaultValueAssignment_3_1_0 = (Assignment)cAlternatives_3_1.eContents().get(0);
		private final Keyword cDefaultValueTrueKeyword_3_1_0_0 = (Keyword)cDefaultValueAssignment_3_1_0.eContents().get(0);
		private final Keyword cFalseKeyword_3_1_1 = (Keyword)cAlternatives_3_1.eContents().get(1);
		
		//BoolProperty:
		//  description=STRING? dataType="boolean" name=ID (hasDefault?="default" (defaultValue
		//  ?="true"|"false"))?;
		public ParserRule getRule() { return rule; }

		//description=STRING? dataType="boolean" name=ID (hasDefault?="default" (defaultValue
		//?="true"|"false"))?
		public Group getGroup() { return cGroup; }

		//description=STRING?
		public Assignment getDescriptionAssignment_0() { return cDescriptionAssignment_0; }

		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_0_0() { return cDescriptionSTRINGTerminalRuleCall_0_0; }

		//dataType="boolean"
		public Assignment getDataTypeAssignment_1() { return cDataTypeAssignment_1; }

		//"boolean"
		public Keyword getDataTypeBooleanKeyword_1_0() { return cDataTypeBooleanKeyword_1_0; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//(hasDefault?="default" (defaultValue?="true"|"false"))?
		public Group getGroup_3() { return cGroup_3; }

		//hasDefault?="default"
		public Assignment getHasDefaultAssignment_3_0() { return cHasDefaultAssignment_3_0; }

		//"default"
		public Keyword getHasDefaultDefaultKeyword_3_0_0() { return cHasDefaultDefaultKeyword_3_0_0; }

		//defaultValue?="true"|"false"
		public Alternatives getAlternatives_3_1() { return cAlternatives_3_1; }

		//defaultValue?="true"
		public Assignment getDefaultValueAssignment_3_1_0() { return cDefaultValueAssignment_3_1_0; }

		//"true"
		public Keyword getDefaultValueTrueKeyword_3_1_0_0() { return cDefaultValueTrueKeyword_3_1_0_0; }

		//"false"
		public Keyword getFalseKeyword_3_1_1() { return cFalseKeyword_3_1_1; }
	}

	public class StringPropertyElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "StringProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDescriptionAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_0_0 = (RuleCall)cDescriptionAssignment_0.eContents().get(0);
		private final Assignment cDataTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cDataTypeStringKeyword_1_0 = (Keyword)cDataTypeAssignment_1.eContents().get(0);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cHasDefaultAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final Keyword cHasDefaultDefaultKeyword_3_0_0 = (Keyword)cHasDefaultAssignment_3_0.eContents().get(0);
		private final Assignment cDefaultValueAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cDefaultValueSTRINGTerminalRuleCall_3_1_0 = (RuleCall)cDefaultValueAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cMinlengthKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cMinLengthAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cMinLengthINTTerminalRuleCall_4_1_0 = (RuleCall)cMinLengthAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cMaxlengthKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cMaxLengthAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cMaxLengthINTTerminalRuleCall_5_1_0 = (RuleCall)cMaxLengthAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cRegexpKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cRegularExpressionAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cRegularExpressionSTRINGTerminalRuleCall_6_1_0 = (RuleCall)cRegularExpressionAssignment_6_1.eContents().get(0);
		
		//StringProperty:
		//  description=STRING? dataType="string" name=ID (hasDefault?="default" defaultValue=
		//  STRING)? ("minlength" minLength=INT)? ("maxlength" maxLength=INT)? ("regexp"
		//  regularExpression=STRING)?;
		public ParserRule getRule() { return rule; }

		//description=STRING? dataType="string" name=ID (hasDefault?="default" defaultValue=
		//STRING)? ("minlength" minLength=INT)? ("maxlength" maxLength=INT)? ("regexp"
		//regularExpression=STRING)?
		public Group getGroup() { return cGroup; }

		//description=STRING?
		public Assignment getDescriptionAssignment_0() { return cDescriptionAssignment_0; }

		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_0_0() { return cDescriptionSTRINGTerminalRuleCall_0_0; }

		//dataType="string"
		public Assignment getDataTypeAssignment_1() { return cDataTypeAssignment_1; }

		//"string"
		public Keyword getDataTypeStringKeyword_1_0() { return cDataTypeStringKeyword_1_0; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//(hasDefault?="default" defaultValue=STRING)?
		public Group getGroup_3() { return cGroup_3; }

		//hasDefault?="default"
		public Assignment getHasDefaultAssignment_3_0() { return cHasDefaultAssignment_3_0; }

		//"default"
		public Keyword getHasDefaultDefaultKeyword_3_0_0() { return cHasDefaultDefaultKeyword_3_0_0; }

		//defaultValue=STRING
		public Assignment getDefaultValueAssignment_3_1() { return cDefaultValueAssignment_3_1; }

		//STRING
		public RuleCall getDefaultValueSTRINGTerminalRuleCall_3_1_0() { return cDefaultValueSTRINGTerminalRuleCall_3_1_0; }

		//("minlength" minLength=INT)?
		public Group getGroup_4() { return cGroup_4; }

		//"minlength"
		public Keyword getMinlengthKeyword_4_0() { return cMinlengthKeyword_4_0; }

		//minLength=INT
		public Assignment getMinLengthAssignment_4_1() { return cMinLengthAssignment_4_1; }

		//INT
		public RuleCall getMinLengthINTTerminalRuleCall_4_1_0() { return cMinLengthINTTerminalRuleCall_4_1_0; }

		//("maxlength" maxLength=INT)?
		public Group getGroup_5() { return cGroup_5; }

		//"maxlength"
		public Keyword getMaxlengthKeyword_5_0() { return cMaxlengthKeyword_5_0; }

		//maxLength=INT
		public Assignment getMaxLengthAssignment_5_1() { return cMaxLengthAssignment_5_1; }

		//INT
		public RuleCall getMaxLengthINTTerminalRuleCall_5_1_0() { return cMaxLengthINTTerminalRuleCall_5_1_0; }

		//("regexp" regularExpression=STRING)?
		public Group getGroup_6() { return cGroup_6; }

		//"regexp"
		public Keyword getRegexpKeyword_6_0() { return cRegexpKeyword_6_0; }

		//regularExpression=STRING
		public Assignment getRegularExpressionAssignment_6_1() { return cRegularExpressionAssignment_6_1; }

		//STRING
		public RuleCall getRegularExpressionSTRINGTerminalRuleCall_6_1_0() { return cRegularExpressionSTRINGTerminalRuleCall_6_1_0; }
	}

	public class DateTimePropertyElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DateTimeProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDescriptionAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_0_0 = (RuleCall)cDescriptionAssignment_0.eContents().get(0);
		private final Assignment cDataTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cDataTypeDatetimeKeyword_1_0 = (Keyword)cDataTypeAssignment_1.eContents().get(0);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cHasDefaultAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final Keyword cHasDefaultDefaultKeyword_3_0_0 = (Keyword)cHasDefaultAssignment_3_0.eContents().get(0);
		private final Assignment cDefaultValueAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cDefaultValueSTRINGTerminalRuleCall_3_1_0 = (RuleCall)cDefaultValueAssignment_3_1.eContents().get(0);
		
		//DateTimeProperty:
		//  description=STRING? dataType="datetime" name=ID (hasDefault?="default" defaultValue=
		//  STRING)?; 
		//
		//
		//    
		//    
		////    accuracy=DateTimeAccuracy
		public ParserRule getRule() { return rule; }

		//description=STRING? dataType="datetime" name=ID (hasDefault?="default" defaultValue=
		//STRING)? 
		//    
		//    
		////    accuracy=DateTimeAccuracy
		public Group getGroup() { return cGroup; }

		//description=STRING?
		public Assignment getDescriptionAssignment_0() { return cDescriptionAssignment_0; }

		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_0_0() { return cDescriptionSTRINGTerminalRuleCall_0_0; }

		//dataType="datetime" 
		//    
		////    accuracy=DateTimeAccuracy
		public Assignment getDataTypeAssignment_1() { return cDataTypeAssignment_1; }

		//"datetime" 
		////    accuracy=DateTimeAccuracy
		public Keyword getDataTypeDatetimeKeyword_1_0() { return cDataTypeDatetimeKeyword_1_0; }

		//name=ID 
		////    accuracy=DateTimeAccuracy
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//(hasDefault?="default" defaultValue=STRING)?
		public Group getGroup_3() { return cGroup_3; }

		//hasDefault?="default"
		public Assignment getHasDefaultAssignment_3_0() { return cHasDefaultAssignment_3_0; }

		//"default"
		public Keyword getHasDefaultDefaultKeyword_3_0_0() { return cHasDefaultDefaultKeyword_3_0_0; }

		//defaultValue=STRING
		public Assignment getDefaultValueAssignment_3_1() { return cDefaultValueAssignment_3_1; }

		//STRING
		public RuleCall getDefaultValueSTRINGTerminalRuleCall_3_1_0() { return cDefaultValueSTRINGTerminalRuleCall_3_1_0; }
	}

	public class IntegerPropertyElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "IntegerProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDescriptionAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_0_0 = (RuleCall)cDescriptionAssignment_0.eContents().get(0);
		private final Assignment cDataTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cDataTypeIntegerKeyword_1_0 = (Keyword)cDataTypeAssignment_1.eContents().get(0);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cHasDefaultAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final Keyword cHasDefaultDefaultKeyword_3_0_0 = (Keyword)cHasDefaultAssignment_3_0.eContents().get(0);
		private final Assignment cDefaultValueAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cDefaultValueINTTerminalRuleCall_3_1_0 = (RuleCall)cDefaultValueAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cMinKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cMinValueAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cMinValueINTTerminalRuleCall_4_1_0 = (RuleCall)cMinValueAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cMaxKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cMaxValueAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cMaxValueINTTerminalRuleCall_5_1_0 = (RuleCall)cMaxValueAssignment_5_1.eContents().get(0);
		
		//IntegerProperty:
		//  description=STRING? dataType="integer" name=ID (hasDefault?="default" defaultValue=
		//  INT)? ("min" minValue=INT)? ("max" maxValue=INT)?;
		public ParserRule getRule() { return rule; }

		//description=STRING? dataType="integer" name=ID (hasDefault?="default" defaultValue=
		//INT)? ("min" minValue=INT)? ("max" maxValue=INT)?
		public Group getGroup() { return cGroup; }

		//description=STRING?
		public Assignment getDescriptionAssignment_0() { return cDescriptionAssignment_0; }

		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_0_0() { return cDescriptionSTRINGTerminalRuleCall_0_0; }

		//dataType="integer"
		public Assignment getDataTypeAssignment_1() { return cDataTypeAssignment_1; }

		//"integer"
		public Keyword getDataTypeIntegerKeyword_1_0() { return cDataTypeIntegerKeyword_1_0; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//(hasDefault?="default" defaultValue=INT)?
		public Group getGroup_3() { return cGroup_3; }

		//hasDefault?="default"
		public Assignment getHasDefaultAssignment_3_0() { return cHasDefaultAssignment_3_0; }

		//"default"
		public Keyword getHasDefaultDefaultKeyword_3_0_0() { return cHasDefaultDefaultKeyword_3_0_0; }

		//defaultValue=INT
		public Assignment getDefaultValueAssignment_3_1() { return cDefaultValueAssignment_3_1; }

		//INT
		public RuleCall getDefaultValueINTTerminalRuleCall_3_1_0() { return cDefaultValueINTTerminalRuleCall_3_1_0; }

		//("min" minValue=INT)?
		public Group getGroup_4() { return cGroup_4; }

		//"min"
		public Keyword getMinKeyword_4_0() { return cMinKeyword_4_0; }

		//minValue=INT
		public Assignment getMinValueAssignment_4_1() { return cMinValueAssignment_4_1; }

		//INT
		public RuleCall getMinValueINTTerminalRuleCall_4_1_0() { return cMinValueINTTerminalRuleCall_4_1_0; }

		//("max" maxValue=INT)?
		public Group getGroup_5() { return cGroup_5; }

		//"max"
		public Keyword getMaxKeyword_5_0() { return cMaxKeyword_5_0; }

		//maxValue=INT
		public Assignment getMaxValueAssignment_5_1() { return cMaxValueAssignment_5_1; }

		//INT
		public RuleCall getMaxValueINTTerminalRuleCall_5_1_0() { return cMaxValueINTTerminalRuleCall_5_1_0; }
	}

	public class DecimalPropertyElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DecimalProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDescriptionAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_0_0 = (RuleCall)cDescriptionAssignment_0.eContents().get(0);
		private final Assignment cDataTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cDataTypeDecimalKeyword_1_0 = (Keyword)cDataTypeAssignment_1.eContents().get(0);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		
		//DecimalProperty:
		//  description=STRING? dataType="decimal" name=ID; 
		//
		//
		//    
		//      
		////                 (hasDefault?="default" defaultValue=INT)?
		////               ("min" minValue=INT)? ("max" maxValue=INT)?
		public ParserRule getRule() { return rule; }

		//description=STRING? dataType="decimal" name=ID 
		//    
		//      
		////                 (hasDefault?="default" defaultValue=INT)?
		////               ("min" minValue=INT)? ("max" maxValue=INT)?
		public Group getGroup() { return cGroup; }

		//description=STRING?
		public Assignment getDescriptionAssignment_0() { return cDescriptionAssignment_0; }

		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_0_0() { return cDescriptionSTRINGTerminalRuleCall_0_0; }

		//dataType="decimal"
		public Assignment getDataTypeAssignment_1() { return cDataTypeAssignment_1; }

		//"decimal"
		public Keyword getDataTypeDecimalKeyword_1_0() { return cDataTypeDecimalKeyword_1_0; }

		//name=ID   
		////                 (hasDefault?="default" defaultValue=INT)?
		////               ("min" minValue=INT)? ("max" maxValue=INT)?
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID 
		////                 (hasDefault?="default" defaultValue=INT)?
		////               ("min" minValue=INT)? ("max" maxValue=INT)?
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
	}

	public class EnumerationPropertyElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EnumerationProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDescriptionAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_0_0 = (RuleCall)cDescriptionAssignment_0.eContents().get(0);
		private final Assignment cTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cTypeEnumerationCrossReference_1_0 = (CrossReference)cTypeAssignment_1.eContents().get(0);
		private final RuleCall cTypeEnumerationIDTerminalRuleCall_1_0_1 = (RuleCall)cTypeEnumerationCrossReference_1_0.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cHasDefaultAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final Keyword cHasDefaultDefaultKeyword_3_0_0 = (Keyword)cHasDefaultAssignment_3_0.eContents().get(0);
		private final Assignment cDefaultValueAsStringAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cDefaultValueAsStringIDTerminalRuleCall_3_1_0 = (RuleCall)cDefaultValueAsStringAssignment_3_1.eContents().get(0);
		
		//EnumerationProperty:
		//  description=STRING? type=[Enumeration] name=ID (hasDefault?="default"
		//  defaultValueAsString=ID)?;
		public ParserRule getRule() { return rule; }

		//description=STRING? type=[Enumeration] name=ID (hasDefault?="default"
		//defaultValueAsString=ID)?
		public Group getGroup() { return cGroup; }

		//description=STRING?
		public Assignment getDescriptionAssignment_0() { return cDescriptionAssignment_0; }

		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_0_0() { return cDescriptionSTRINGTerminalRuleCall_0_0; }

		//type=[Enumeration]
		public Assignment getTypeAssignment_1() { return cTypeAssignment_1; }

		//[Enumeration]
		public CrossReference getTypeEnumerationCrossReference_1_0() { return cTypeEnumerationCrossReference_1_0; }

		//ID
		public RuleCall getTypeEnumerationIDTerminalRuleCall_1_0_1() { return cTypeEnumerationIDTerminalRuleCall_1_0_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//(hasDefault?="default" defaultValueAsString=ID)?
		public Group getGroup_3() { return cGroup_3; }

		//hasDefault?="default"
		public Assignment getHasDefaultAssignment_3_0() { return cHasDefaultAssignment_3_0; }

		//"default"
		public Keyword getHasDefaultDefaultKeyword_3_0_0() { return cHasDefaultDefaultKeyword_3_0_0; }

		//defaultValueAsString=ID
		public Assignment getDefaultValueAsStringAssignment_3_1() { return cDefaultValueAsStringAssignment_3_1; }

		//ID
		public RuleCall getDefaultValueAsStringIDTerminalRuleCall_3_1_0() { return cDefaultValueAsStringIDTerminalRuleCall_3_1_0; }
	}
	
	
	public class MultiplicityElements implements IEnumRuleAccess {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "Multiplicity");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cZeroManyEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cZeroManyManyKeyword_0_0 = (Keyword)cZeroManyEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cZeroOneEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cZeroOneOneKeyword_1_0 = (Keyword)cZeroOneEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum Multiplicity:
		//  ZeroMany="many" | ZeroOne="one"; 
		//
		//  
		//            // | OneMany="1..*" | One="1..1"
		public EnumRule getRule() { return rule; }

		//ZeroMany="many" | ZeroOne="one" 
		//
		//  
		//            // | OneMany="1..*" | One="1..1"
		public Alternatives getAlternatives() { return cAlternatives; }

		//ZeroMany="many"
		public EnumLiteralDeclaration getZeroManyEnumLiteralDeclaration_0() { return cZeroManyEnumLiteralDeclaration_0; }

		//"many"
		public Keyword getZeroManyManyKeyword_0_0() { return cZeroManyManyKeyword_0_0; }

		//ZeroOne="one" 
		//            // | OneMany="1..*" | One="1..1"
		public EnumLiteralDeclaration getZeroOneEnumLiteralDeclaration_1() { return cZeroOneEnumLiteralDeclaration_1; }

		//"one"     // | OneMany="1..*" | One="1..1"
		public Keyword getZeroOneOneKeyword_1_0() { return cZeroOneOneKeyword_1_0; }
	}

	public class DateTimeAccuracyElements implements IEnumRuleAccess {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "DateTimeAccuracy");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cMonthEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cMonthMonthKeyword_0_0 = (Keyword)cMonthEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cYearEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cYearYearKeyword_1_0 = (Keyword)cYearEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cDayEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cDayDayKeyword_2_0 = (Keyword)cDayEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cHourEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cHourHourKeyword_3_0 = (Keyword)cHourEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cMinuteEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cMinuteMinuteKeyword_4_0 = (Keyword)cMinuteEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cSecondEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cSecondSecondKeyword_5_0 = (Keyword)cSecondEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cMillisecondEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cMillisecondMillisecondKeyword_6_0 = (Keyword)cMillisecondEnumLiteralDeclaration_6.eContents().get(0);
		
		//enum DateTimeAccuracy:
		//  Month="month" | Year="year" | Day="day" | Hour="hour" | Minute="minute" | Second="second" |
		//  Millisecond="millisecond";
		public EnumRule getRule() { return rule; }

		//Month="month" | Year="year" | Day="day" | Hour="hour" | Minute="minute" | Second="second" |
		//Millisecond="millisecond"
		public Alternatives getAlternatives() { return cAlternatives; }

		//Month="month"
		public EnumLiteralDeclaration getMonthEnumLiteralDeclaration_0() { return cMonthEnumLiteralDeclaration_0; }

		//"month"
		public Keyword getMonthMonthKeyword_0_0() { return cMonthMonthKeyword_0_0; }

		//Year="year"
		public EnumLiteralDeclaration getYearEnumLiteralDeclaration_1() { return cYearEnumLiteralDeclaration_1; }

		//"year"
		public Keyword getYearYearKeyword_1_0() { return cYearYearKeyword_1_0; }

		//Day="day"
		public EnumLiteralDeclaration getDayEnumLiteralDeclaration_2() { return cDayEnumLiteralDeclaration_2; }

		//"day"
		public Keyword getDayDayKeyword_2_0() { return cDayDayKeyword_2_0; }

		//Hour="hour"
		public EnumLiteralDeclaration getHourEnumLiteralDeclaration_3() { return cHourEnumLiteralDeclaration_3; }

		//"hour"
		public Keyword getHourHourKeyword_3_0() { return cHourHourKeyword_3_0; }

		//Minute="minute"
		public EnumLiteralDeclaration getMinuteEnumLiteralDeclaration_4() { return cMinuteEnumLiteralDeclaration_4; }

		//"minute"
		public Keyword getMinuteMinuteKeyword_4_0() { return cMinuteMinuteKeyword_4_0; }

		//Second="second"
		public EnumLiteralDeclaration getSecondEnumLiteralDeclaration_5() { return cSecondEnumLiteralDeclaration_5; }

		//"second"
		public Keyword getSecondSecondKeyword_5_0() { return cSecondSecondKeyword_5_0; }

		//Millisecond="millisecond"
		public EnumLiteralDeclaration getMillisecondEnumLiteralDeclaration_6() { return cMillisecondEnumLiteralDeclaration_6; }

		//"millisecond"
		public Keyword getMillisecondMillisecondKeyword_6_0() { return cMillisecondMillisecondKeyword_6_0; }
	}

	public class PersistencyModeElements implements IEnumRuleAccess {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "PersistencyMode");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cReadWriteEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cReadWriteReadWriteKeyword_0_0 = (Keyword)cReadWriteEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cReadEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cReadReadKeyword_1_0 = (Keyword)cReadEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cNoneEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cNoneNONEKeyword_2_0 = (Keyword)cNoneEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum PersistencyMode:
		//  ReadWrite | Read | None="NONE";
		public EnumRule getRule() { return rule; }

		//ReadWrite | Read | None="NONE"
		public Alternatives getAlternatives() { return cAlternatives; }

		//ReadWrite
		public EnumLiteralDeclaration getReadWriteEnumLiteralDeclaration_0() { return cReadWriteEnumLiteralDeclaration_0; }

		//"ReadWrite"
		public Keyword getReadWriteReadWriteKeyword_0_0() { return cReadWriteReadWriteKeyword_0_0; }

		//Read
		public EnumLiteralDeclaration getReadEnumLiteralDeclaration_1() { return cReadEnumLiteralDeclaration_1; }

		//"Read"
		public Keyword getReadReadKeyword_1_0() { return cReadReadKeyword_1_0; }

		//None="NONE"
		public EnumLiteralDeclaration getNoneEnumLiteralDeclaration_2() { return cNoneEnumLiteralDeclaration_2; }

		//"NONE"
		public Keyword getNoneNONEKeyword_2_0() { return cNoneNONEKeyword_2_0; }
	}
	
	private BusinessDomainModelElements pBusinessDomainModel;
	private AssociationElements pAssociation;
	private MultiplicityElements unknownRuleMultiplicity;
	private BusinessClassElements pBusinessClass;
	private EnumerationElements pEnumeration;
	private EnumerationLiteralElements pEnumerationLiteral;
	private AbstractBusinessRuleElements pAbstractBusinessRule;
	private BusinessRuleElements pBusinessRule;
	private UniqueRuleElements pUniqueRule;
	private PropertyElements pProperty;
	private BoolPropertyElements pBoolProperty;
	private StringPropertyElements pStringProperty;
	private DateTimePropertyElements pDateTimeProperty;
	private DateTimeAccuracyElements unknownRuleDateTimeAccuracy;
	private IntegerPropertyElements pIntegerProperty;
	private DecimalPropertyElements pDecimalProperty;
	private EnumerationPropertyElements pEnumerationProperty;
	private PersistencyModeElements unknownRulePersistencyMode;
	
	private final GrammarProvider grammarProvider;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public BusinessDomainGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammarProvider = grammarProvider;
		this.gaTerminals = gaTerminals;
	}
	
	public Grammar getGrammar() {	
		return grammarProvider.getGrammar(this);
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//BusinessDomainModel:
	//  description=STRING? "domain" name=ID ";" (types+=BusinessClass|enumerations+=
	//  Enumeration|associations+=Association)*; 
	//
	/// *******************************************************************************
	// * Copyright (c) 2009 Ordina and committers to Mod4j
	// * All rights reserved. This program and the accompanying materials
	// * are made available under the terms of the Eclipse Public License v1.0
	// * which accompanies this distribution, and is available at
	// * http://www.eclipse.org/legal/epl-v10.html
	// *
	// * Contributors:
	// *     Ordina - initial implementation
	// ******************************************************************************* /
	//
	//  
	//	  
	//	        
	////	(types+= BusinessClassReference)*
	//	                
	//	          
	//	      
	//	 
	//	
	//// COMMETNED OUT: import does not work correctly, therefore should not be possible at all.
	////BusinessClassReference:
	////    "from" referredModel=ID "import" name=ID  ";" 
	////    ;
	public BusinessDomainModelElements getBusinessDomainModelAccess() {
		return (pBusinessDomainModel != null) ? pBusinessDomainModel : (pBusinessDomainModel = new BusinessDomainModelElements());
	}
	
	public ParserRule getBusinessDomainModelRule() {
		return getBusinessDomainModelAccess().getRule();
	}

	//Association:
	//  description=STRING? "association" source=[BusinessClass] sourceRoleName=ID
	//  sourceMultiplicity=Multiplicity (bidirectional?="<->"|"->") targetMultiplicity=
	//  Multiplicity target=[AbstractBusinessClass] targetRoleName=ID ordered?="ordered"?
	//  ";"; 
	//// COMMETNED OUT: import does not work correctly, therefore should not be possible at all.
	////BusinessClassReference:
	////    "from" referredModel=ID "import" name=ID  ";" 
	////    ;
	public AssociationElements getAssociationAccess() {
		return (pAssociation != null) ? pAssociation : (pAssociation = new AssociationElements());
	}
	
	public ParserRule getAssociationRule() {
		return getAssociationAccess().getRule();
	}

	//enum Multiplicity:
	//  ZeroMany="many" | ZeroOne="one"; 
	//
	//  
	//            // | OneMany="1..*" | One="1..1"
	public MultiplicityElements getMultiplicityAccess() {
		return (unknownRuleMultiplicity != null) ? unknownRuleMultiplicity : (unknownRuleMultiplicity = new MultiplicityElements());
	}
	
	public EnumRule getMultiplicityRule() {
		return getMultiplicityAccess().getRule();
	}

	//BusinessClass:
	//  description=STRING? "class" name=ID ("inherits" superclass=[BusinessClass])? "["
	//  properties+=Property* ("rules" "[" businessRules+=AbstractBusinessRule* "]")? "]";
	public BusinessClassElements getBusinessClassAccess() {
		return (pBusinessClass != null) ? pBusinessClass : (pBusinessClass = new BusinessClassElements());
	}
	
	public ParserRule getBusinessClassRule() {
		return getBusinessClassAccess().getRule();
	}

	//Enumeration:
	//  description=STRING? "enumeration" name=ID "[" enumerationLiterals+=
	//  EnumerationLiteral+ "]";
	public EnumerationElements getEnumerationAccess() {
		return (pEnumeration != null) ? pEnumeration : (pEnumeration = new EnumerationElements());
	}
	
	public ParserRule getEnumerationRule() {
		return getEnumerationAccess().getRule();
	}

	//EnumerationLiteral:
	//  name=ID ("=" persistedValue=INT) ";";
	public EnumerationLiteralElements getEnumerationLiteralAccess() {
		return (pEnumerationLiteral != null) ? pEnumerationLiteral : (pEnumerationLiteral = new EnumerationLiteralElements());
	}
	
	public ParserRule getEnumerationLiteralRule() {
		return getEnumerationLiteralAccess().getRule();
	}

	//AbstractBusinessRule:
	//  BusinessRule|UniqueRule;
	public AbstractBusinessRuleElements getAbstractBusinessRuleAccess() {
		return (pAbstractBusinessRule != null) ? pAbstractBusinessRule : (pAbstractBusinessRule = new AbstractBusinessRuleElements());
	}
	
	public ParserRule getAbstractBusinessRuleRule() {
		return getAbstractBusinessRuleAccess().getRule();
	}

	//BusinessRule:
	//  description=STRING? name=ID ";";
	public BusinessRuleElements getBusinessRuleAccess() {
		return (pBusinessRule != null) ? pBusinessRule : (pBusinessRule = new BusinessRuleElements());
	}
	
	public ParserRule getBusinessRuleRule() {
		return getBusinessRuleAccess().getRule();
	}

	//UniqueRule:
	//  description=STRING? "unique" name=ID "[" properties+=[Property] ("," properties+=[
	//  Property])* "]";
	public UniqueRuleElements getUniqueRuleAccess() {
		return (pUniqueRule != null) ? pUniqueRule : (pUniqueRule = new UniqueRuleElements());
	}
	
	public ParserRule getUniqueRuleRule() {
		return getUniqueRuleAccess().getRule();
	}

	//Property:
	//  (BoolProperty|StringProperty|DateTimeProperty|IntegerProperty|DecimalProperty|
	//  EnumerationProperty) nullable?="nullable"? (derived?="derived" writable?="writable"
	//  ?)? ";"; 
	//
	//
	//                  
	//	      
	//	
	//	  
	////	("persistency" persistency=PersistencyMode)?
	public PropertyElements getPropertyAccess() {
		return (pProperty != null) ? pProperty : (pProperty = new PropertyElements());
	}
	
	public ParserRule getPropertyRule() {
		return getPropertyAccess().getRule();
	}

	//BoolProperty:
	//  description=STRING? dataType="boolean" name=ID (hasDefault?="default" (defaultValue
	//  ?="true"|"false"))?;
	public BoolPropertyElements getBoolPropertyAccess() {
		return (pBoolProperty != null) ? pBoolProperty : (pBoolProperty = new BoolPropertyElements());
	}
	
	public ParserRule getBoolPropertyRule() {
		return getBoolPropertyAccess().getRule();
	}

	//StringProperty:
	//  description=STRING? dataType="string" name=ID (hasDefault?="default" defaultValue=
	//  STRING)? ("minlength" minLength=INT)? ("maxlength" maxLength=INT)? ("regexp"
	//  regularExpression=STRING)?;
	public StringPropertyElements getStringPropertyAccess() {
		return (pStringProperty != null) ? pStringProperty : (pStringProperty = new StringPropertyElements());
	}
	
	public ParserRule getStringPropertyRule() {
		return getStringPropertyAccess().getRule();
	}

	//DateTimeProperty:
	//  description=STRING? dataType="datetime" name=ID (hasDefault?="default" defaultValue=
	//  STRING)?; 
	//
	//
	//    
	//    
	////    accuracy=DateTimeAccuracy
	public DateTimePropertyElements getDateTimePropertyAccess() {
		return (pDateTimeProperty != null) ? pDateTimeProperty : (pDateTimeProperty = new DateTimePropertyElements());
	}
	
	public ParserRule getDateTimePropertyRule() {
		return getDateTimePropertyAccess().getRule();
	}

	//enum DateTimeAccuracy:
	//  Month="month" | Year="year" | Day="day" | Hour="hour" | Minute="minute" | Second="second" |
	//  Millisecond="millisecond";
	public DateTimeAccuracyElements getDateTimeAccuracyAccess() {
		return (unknownRuleDateTimeAccuracy != null) ? unknownRuleDateTimeAccuracy : (unknownRuleDateTimeAccuracy = new DateTimeAccuracyElements());
	}
	
	public EnumRule getDateTimeAccuracyRule() {
		return getDateTimeAccuracyAccess().getRule();
	}

	//IntegerProperty:
	//  description=STRING? dataType="integer" name=ID (hasDefault?="default" defaultValue=
	//  INT)? ("min" minValue=INT)? ("max" maxValue=INT)?;
	public IntegerPropertyElements getIntegerPropertyAccess() {
		return (pIntegerProperty != null) ? pIntegerProperty : (pIntegerProperty = new IntegerPropertyElements());
	}
	
	public ParserRule getIntegerPropertyRule() {
		return getIntegerPropertyAccess().getRule();
	}

	//DecimalProperty:
	//  description=STRING? dataType="decimal" name=ID; 
	//
	//
	//    
	//      
	////                 (hasDefault?="default" defaultValue=INT)?
	////               ("min" minValue=INT)? ("max" maxValue=INT)?
	public DecimalPropertyElements getDecimalPropertyAccess() {
		return (pDecimalProperty != null) ? pDecimalProperty : (pDecimalProperty = new DecimalPropertyElements());
	}
	
	public ParserRule getDecimalPropertyRule() {
		return getDecimalPropertyAccess().getRule();
	}

	//EnumerationProperty:
	//  description=STRING? type=[Enumeration] name=ID (hasDefault?="default"
	//  defaultValueAsString=ID)?;
	public EnumerationPropertyElements getEnumerationPropertyAccess() {
		return (pEnumerationProperty != null) ? pEnumerationProperty : (pEnumerationProperty = new EnumerationPropertyElements());
	}
	
	public ParserRule getEnumerationPropertyRule() {
		return getEnumerationPropertyAccess().getRule();
	}

	//enum PersistencyMode:
	//  ReadWrite | Read | None="NONE";
	public PersistencyModeElements getPersistencyModeAccess() {
		return (unknownRulePersistencyMode != null) ? unknownRulePersistencyMode : (unknownRulePersistencyMode = new PersistencyModeElements());
	}
	
	public EnumRule getPersistencyModeRule() {
		return getPersistencyModeAccess().getRule();
	}

	//terminal ID:
	//  "^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//  "0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//  "\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" |
	//  "t" | "n" | "f" | "r" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//  "/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//  "//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//  (" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//  .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
