<?xml version="1.0" encoding="UTF-8"?>
<document xmlns="http://maven.apache.org/XDOC/2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">

    <!--
        Please edit this file with the Eclipse XML editor, set your XML editor to a line length of
        128 characters, indent-size of 4 characters and not using tab-characters, and format the
        file (Ctrl-Shift-F) before checking in. This should minimize the number of non-significant
        differences when comparing versions.
    -->

    <properties>
        <title>Mod4j 1.2.0 Upgrade Notes</title>
    </properties>
    <body>
        <section name="Mod4j 1.2.0 Upgrade Notes">
            <p>
                The following upgrade steps are needed if you want to upgrade your
                project from
                <b>Mod4j 1.1.0</b>
                to
                <b>Mod4j 1.2.0</b>
                .
            </p>
            <subsection name="Installation of Mod4j Eclipse plug-in 1.2.0">
                <p>Before you install a new Mod4j Eclipse plug-in into Eclipse make sure you
                    un-install older
                    versions of the plug-in.</p>
                <p>
                    Here you can find
                    <a href="../../downloads/download.html">download and install</a>
                    instructions, that will guide you to install Mod4j, by making use of the Mod4j
                    updatesite.
                </p>
            </subsection>
            <subsection name="Changes in Maven configuration">
                <p>With this release Mod4j has improved the Maven configuration for your
                    application. Follow the next steps to
                    adjust the Maven configuration in the right
                    way. 
                </p>
                <p>
                    All changes apply to the
                    <b>parent-pom</b>
                    of your application. The parent-pom (pom.xml) is located at the root
                    of your
                    project (if you didn't change its location).
                </p>
                <ol>
                    <li>
                        Adjust
                        <b>mod4j.version</b>
                        property to
                        <b>1.2.0</b>
                        :
                        <br />
                        <textarea rows="5" cols="70"><![CDATA[
<project>
   ...
   <properties>
       <mod4j.version>1.2.0</mod4j.version>]]>
                        </textarea>
                    </li>
                </ol>
            </subsection>
            <subsection name="Model syntax changes">
                <p>
                    The DataContract DSL model syntax has been improved.  
                </p>
                <ul>
                    <li>
                        For all <b>datacontract</b> models, usage of the
                        <b>list</b>
                        keyword must be converted. The
                        <b>list</b>
                        keyword is removed from the syntax.
                        <br />
                        Lists are now automatically detected when a dto-type is used as a reference
                        in another dto. See next example:
                        <textarea rows="18" cols="80"><![CDATA[
    ...
    class CustomerWithOrdersAndOrderLines represents Customer [
        firstName;
        lastName;
        birthDate;
        customerNr;
        references [ orders as OrderWithOrderLinesDto; ]
    ]
    
    // Old style-> list OrdersWithOrderLines contains OrderWithOrderLinesDto ;
    
    class OrderWithOrderLinesDto represents Order [
        orderNumber; 
        references [
            orderLines as OrderLinesDto ;
        ]
    ]
    ...]]>
                        </textarea>
                        <br />
                        <br />
                    </li>
                </ul>
                <p>
                    The Service DSL model syntax has been improved.  
                </p>
                <ul>
                    <li>
                        In the <b>datacontract</b> models the ListDto has been removed. 
                        As a consequence, a ListDto cannot be used in the service models either.
                        For aal of the standard services (listall, find, and reference methods) it is
                        autmatically deduced when a list is needed.  
                        For custom service methods, one can insert the <b>list</b> keyword before a Dto
                        for both the in and/or out parameters, to specify that the custom method takes
                        a list of Dtos as parameter.
                        See next example:
                        <textarea rows="18" cols="80"><![CDATA[
    ...
    "Find all Customers matching the given name."
    method findCustomerByName in ( StringDto name ) out list SimpleCustomerDto;    

    method findCustomersByNames in ( list StringDto name ) out list SimpleCustomerDto;    
...]]>
                        </textarea>
                        <br />
                        <br />
                    </li>
                </ul>
            </subsection>
        </section>
    </body>
</document>